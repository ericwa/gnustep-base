<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.6//EN" "http://www.gnustep.org/gsdoc-0_6_6.xml">
<gsdoc base="NSObject" prev="NSNumberFormatter" next="NSPort" up="Base">
  <head>
    <title>NSObject</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org"/>
      <url url="http://www.gnustep.org/developers/whoiswho.html"/>
    </author>
    <version>$Revision$>/version>
    <date>$Date$</date>
  </head>
  <body>
    <chapter>
      <heading>NSObject</heading>
      <class name="NSObject">
        <declared>Foundation/NSObject.h</declared>
        <conform>NSObject</conform>
          <desc>
          </desc>
        <method type="id" factory="yes">
          <sel>alloc</sel>
          <desc>
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>allocWithZone:</sel>
          <arg type="NSZone*">zone</arg>
          <desc>
          </desc>
        </method>
        <method type="void" factory="yes">
          <sel>cancelPreviousPerformRequestsWithTarget:</sel>
          <arg type="id">aTarget</arg>
          <sel>selector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="Class" factory="yes">
          <sel>class</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL" factory="yes">
          <sel>conformsToProtocol:</sel>
          <arg type="Protocol*">aProtocol</arg>
          <desc>
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>copyWithZone:</sel>
          <arg type="NSZone*">zone</arg>
          <desc>
          </desc>
        </method>
        <method type="NSString*" factory="yes">
          <sel>description</sel>
          <desc>
	    The <code>description</code> factory method describes the class
	    of the receiver.  In the default GNUstep implementation, this
	    simply returns the name of the class as an NSString object.
          </desc>
        </method>
        <method type="NSString*" factory="yes">
          <sel>descriptionWithLocale:</sel>
	  <arg type="NSDictionary*">aLocale</arg>
          <desc>
	    The default (NSOBject) implementation of this method simply calls
	    the <code>description</code> method and discards the locale
	    information.
          </desc>
	  <standards><GNUstep/></standards>
        </method>
        <method type="NSString*" factory="yes">
          <sel>descriptionWithLocale:</sel>
	  <arg type="NSDictionary*">aLocale</arg>
	  <sel>indent:</sel>
	  <arg type="unsigned int">level</arg>
          <desc>
	    The default (NSObject) implementation of this method simply calls
	    the <code>descriptionWithLocale:</code> method and discards the
	    level information.
          </desc>
	  <standards><GNUstep/></standards>
        </method>
        <method type="NSString*" factory="yes">
          <sel>descriptionWithLocale:</sel>
	  <arg type="NSDictionary*">aLocale</arg>
	  <sel>indent:</sel>
	  <arg type="unsigned int">level</arg>
	  <sel>to:</sel>
	  <arg type="id&lt;GNUDescriptionDestination&gt;">output</arg>
          <desc>
	    The default (NSObject) implementation of this method simply calls
	    the <code>descriptionWithLocale:indent:</code> method and appends
            the value returned by that method to the output object.
          </desc>
	  <standards><GNUstep/></standards>
        </method>
        <method type="void" factory="yes">
          <sel>initialize</sel>
          <desc>
          </desc>
        </method>
        <method type="IMP" factory="yes">
          <sel>instanceMethodForSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="NSMethodSignature*" factory="yes">
          <sel>instanceMethodSignatureForSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL" factory="yes">
          <sel>instancesRespondToSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="void" factory="yes">
          <sel>load</sel>
          <desc>
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>mutableCopyWithZone:</sel>
          <arg type="NSZone*">zone</arg>
          <desc>
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>new</sel>
          <desc>
          </desc>
        </method>
        <method type="void" factory="yes">
          <sel>poseAsClass:</sel>
          <arg type="Class">aClass</arg>
          <desc>
          </desc>
        </method>
        <method type="void" factory="yes">
          <sel>setVersion:</sel>
          <arg type="int">aVersion</arg>
          <desc>
          </desc>
        </method>
        <method type="Class" factory="yes">
          <sel>superclass</sel>
          <desc>
          </desc>
        </method>
        <method type="int" factory="yes">
          <sel>version</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>awakeAfterUsingCoder:</sel>
          <arg type="NSCoder*">aDecoder</arg>
          <desc>
          </desc>
        </method>
        <method type="Class">
          <sel>classForArchiver</sel>
          <desc>
          </desc>
        </method>
        <method type="Class">
          <sel>classForCoder</sel>
          <desc>
          </desc>
        </method>
        <method type="Class">
          <sel>classForPortCoder</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>connection:</sel>
          <arg type="NSConnection*">connection</arg>
          <sel>handleRequest:</sel>
          <arg type="NSDistantObjectRequest*">doreq</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>copy</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>dealloc</sel>
          <desc>
          </desc>
        </method>
        <method type="NSString*">
          <sel>description</sel>
          <desc>
	    <p>
	      The <code>description</code> method describes the reciever.
	      In the default GNUstep implementation, this returns an NSString
	      object giving the name of the class of the receiver and the
	      hexadecimal representation of the recievers address enclosed
	      in angle brackets.
	    </p>
	    <p>
	      Generally, classes other than NSObject will override this method
	      to provide a more informative description of their instances.
	    </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>descriptionWithLocale:</sel>
	  <arg type="NSDictionary*">aLocale</arg>
          <desc>
	    The default (NSOBject) implementation of this method simply calls
	    the <code>description</code> method and discards the locale
	    information.
          </desc>
	  <standards><GNUstep/></standards>
        </method>
        <method type="NSString*">
          <sel>descriptionWithLocale:</sel>
	  <arg type="NSDictionary*">aLocale</arg>
	  <sel>indent:</sel>
	  <arg type="unsigned int">level</arg>
          <desc>
	    The default (NSObject) implementation of this method simply calls
	    the <code>descriptionWithLocale:</code> method and discards the
	    level information.
          </desc>
	  <standards><GNUstep/></standards>
        </method>
        <method type="NSString*">
          <sel>descriptionWithLocale:</sel>
	  <arg type="NSDictionary*">aLocale</arg>
	  <sel>indent:</sel>
	  <arg type="unsigned int">level</arg>
	  <sel>to:</sel>
	  <arg type="id&lt;GNUDescriptionDestination&gt;">output</arg>
          <desc>
	    The default (NSObject) implementation of this method simply calls
	    the <code>descriptionWithLocale:indent:</code> method and appends
            the value returned by that method to the output object.
	    <p>
	      Property-list classes (NSString, NSArray, NSDictionary and
	      NSData) will override this method in order to efficiently
	      write descriptions of themselves into property lists.
	    </p>
          </desc>
	  <standards><GNUstep/></standards>
        </method>
        <method type="void">
          <sel>doesNotRecognizeSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>forwardInvocation:</sel>
          <arg type="NSInvocation*">anInvocation</arg>
          <desc>
          </desc>
        </method>
        <method type="unsigned int">
          <sel>hash</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>init</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isEqual:</sel>
          <arg type="id">anObject</arg>
          <desc>
          </desc>
        </method>
        <method type="IMP">
          <sel>methodForSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="NSMethodSignature*">
          <sel>methodSignatureForSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>mutableCopy</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>performSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <sel>withObject:</sel>
          <arg type="id">anArgument</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>performSelector:</sel>
          <arg type="SEL">aSelector</arg>
          <sel>withObject:</sel>
          <arg type="id">anArgument</arg>
          <sel>afterDelay:</sel>
          <arg type="NSTimeInterval">delay</arg>
          <sel>inModes:</sel>
          <arg type="NSArray*">modes</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>replacementObjectForArchiver:</sel>
          <arg type="NSArchiver*">anArchiver</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>replacementObjectForCoder:</sel>
          <arg type="NSCoder*">aCoder</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>replacementObjectForPortCoder:</sel>
          <arg type="NSPortCoder*">aCoder</arg>
          <desc>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
