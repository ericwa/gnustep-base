<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.5//EN" "http://www.gnustep.org/gsdoc-0_6_5.xml">
<gsdoc base="NSDictionary" prev="NSDeserializer.html" next="NSDirectoryEnumerator.html" up="Base.html">
  <head>
    <title>NSDictionary</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org"/>
      <url url="http://www.gnustep.org/developers/whoiswho.html"/>
    </author>
    <author name="Pierre-Yves Rivaille">
      <email address="pyhrr@altern.org"/>
      <url url="http://altern.org/pyhrr"/>
    </author>
    <version>0.2</version>
    <date>25 April, 2000</date>
  </head>
  <body>
    <chapter>
      <heading>NSDictionary</heading>
      <class name="NSDictionary" super="NSObject">
        <declared>Foundation/NSDictionary.h</declared>
        <conform>NSCoding, NSCopying, NSMutableCopying</conform>
          <desc>


          </desc>
        <method type="id" factory="yes">
          <sel>allocWithZone:</sel>
          <arg type="NSZone*">zone</arg>
          <desc>
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionary</sel>
          <desc>
            Returns an empty dictionary.
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionaryWithContentsOfFile:</sel>
          <arg type="NSString*">path</arg>
          <desc>
            Returns a dictionary using the file located at path. 
            The file must be a property list containing a dictionary as its root object.
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionaryWithDictionary:</sel>
          <arg type="NSDictionary*">otherDictionary</arg>
          <desc>
            Returns a newly created dictionary with the keys and objects of otherDictionary.
            (The keys and objects are not copied.)
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionaryWithObject:</sel>
          <arg type="id">anObject</arg>
          <sel>forKey:</sel>
          <arg type="id">aKey</arg>
          <desc>
            Returns a dictionary containing only one object (anObject) which is associated with aKey.
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionaryWithObjects:</sel>
          <arg type="NSArray*">objects</arg>
          <sel>forKey:</sel>
          <arg type="NSArray*">keys</arg>
          <desc>
            Returns a dictionary created using the given objects and keys.
            The two arrays must have the same size.
            The n th element of the objects array is associated with the n th element of the keys array.
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionaryWithObjects:</sel>
          <arg type="id*">objects</arg>
          <sel>forKeys:</sel>
          <arg type="id*">keys</arg>
          <sel>count:</sel>
          <arg type="unsigned int">count</arg>
          <desc>
            Returns a dictionary created using the C arrays objects and keys.
            The number of elements in both C arrays must be count.
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>dictionaryWithObjectsAndKeys:</sel>
          <arg type="id">object, ...</arg>
          <desc>
            Returns a dictionary created using the list given as argument.
            The list is alernately composed of objects and keys.
            Thus, the list's length must be pair.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>allKeys</sel>
          <desc>
            Returns an array containing all the dictionary's keys.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>allKeysForObject:</sel>
          <arg type="id">anObject</arg>
          <desc>
            Returns an array containing all the dictionary's keys that are associated with anObject.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>allValues</sel>
          <desc>
            Returns an array containing all the dictionary's objects.
          </desc>
        </method>
        <method type="unsigned int">
          <sel>count</sel>
          <desc>
	    Returns an unsigned integer which is the number of elements stored in the dictionary.
          </desc>
        </method>
        <method type="NSString*">
          <sel>descriptionInStringsFileFormat</sel>
          <desc>
            
          </desc>
        </method>
        <method type="NSString*">
          <sel>descriptionWithLocale:</sel>
          <arg type="NSDictionary*">locale</arg>
          <desc>
            
          </desc>
        </method>
        <method type="NSString*">
          <sel>descriptionWithLocale:</sel>
          <arg type="NSDictionary*">locale</arg>
          <desc>
            
          </desc>
        </method>
        <method type="NSString*">
          <sel>fileGroupOwnerAccountName</sel>
          <desc>
           
          </desc>
        </method>
        <method type="NSDate*">
          <sel>fileModificationDate</sel>
          <desc>
           
          </desc>
        </method>
        <method type="NSString*">
          <sel>fileOwnerAccountName</sel>
          <desc>
            
          </desc>
        </method>
        <method type="unsigned long">
          <sel>filePosixPermissions</sel>
          <desc>
            
          </desc>
        </method>
        <method type="unsigned long long">
          <sel>fileSize</sel>
          <desc>
           
          </desc>
        </method>
        <method type="unsigned long">
          <sel>fileSystemFileNumber</sel>
          <desc>
            
          </desc>
        </method>
        <method type="unsigned long">
          <sel>fileSystemNumber</sel>
          <desc>
            
          </desc>
        </method>
        <method type="NSString*">
          <sel>fileType</sel>
          <desc>
            
          </desc>
        </method>
        <method type="id">
          <sel>initWithContentsOfFile:</sel>
          <arg type="NSString*">path</arg>
          <desc>
            see dictionaryWithContentOfFile:
          </desc>
        </method>
        <method type="id">
          <sel>initWithDictionary:</sel>
          <arg type="NSDictionary*">otherDictionary</arg>
          <desc>
            See dictionaryWithDictionary: 
          </desc>
        </method>
        <method type="id">
          <sel>initWithObjects:</sel>
          <arg type="NSArray*">objects</arg>
          <desc>
            See <ref id="dictionaryWithObjects:">dictionaryWithObjects:</ref>            
          </desc>
        </method>

        <method type="id">
          <sel>initWithObjects:</sel>
          <arg type="id*">objects</arg>
          <sel>forKeys:</sel>
          <arg type="id*">keys</arg>
          <sel>count:</sel>
          <arg type="unsigned int">count</arg>
          <desc>
            see dictionaryWithObjects: forKeys: count:
          </desc>
        </method>
        <method type="id">
          <sel>initWithObjectsAndKeys:</sel>
          <arg type="id">object,</arg>
          <desc>
            see dictionaryWithObjectsAndKeys:
          </desc>
        </method>
        <method type="BOOL">
          <sel>isEqualToDictionary:</sel>
          <arg type="NSDictionary*">otherDictionary</arg>
          <desc>
            
          </desc>
        </method>
        <method type="NSEnumerator*">
          <sel>keyEnumerator</sel>
          <desc>
            Return an enumerator object containing all the keys of the dictionary.
          </desc>
        </method>
        <method type="NSArray*">
          <sel> keysSortedByValueUsingSelector:</sel>
          <arg type="SEL">comparator</arg>
          <desc>
            
          </desc>
        </method>
        <method type="NSEnumerator*">
          <sel>objectEnumerator</sel>
          <desc>
            Return an enumerator object containing all the keys of the dictionary.
          </desc>
        </method>
        <method type="id">
          <sel>objectForKey:</sel>
          <arg type="id">aKey</arg>
          <desc>
            Returns the first object which has aKey as key.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>objectsForKeys:</sel>
          <arg type="NSArray*">keys</arg>
          <sel>notFoundMarker:</sel>
          <arg type="id">anObject</arg>
          <desc>
            
          </desc>
        </method>
        <method type="BOOL">
          <sel>writeToFile:</sel>
          <arg type="NSString*">path</arg>
          <sel>atomically:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
