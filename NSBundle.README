
NSBundle is a class that provides a simple front-end to the dynamic
linking capabilities of a computer system. It allows one to more
easily locate and load data and object files at run-time. Object files
can include both simple functions as well as additional classes that
the program may use.

NSBundle locates files within bundles.  A bundle is essentially a
directory that contains text files, data files, and object files (which
contain C functions and Objective-C classes).  Usually the bundle
directory has the extension "bundle" and the main object file that
resides in the directory has the same name as the bundle directory,
without any extension.

The NSBundle class provided with GNUstep Base Library is meant to run
on a variety of systems.  However, some set-up is required to use it.
Currently it has been tested on only a few systems that support
dynamic linking -- Linux, SunOS, Solaris.  It should work on HP, but I
haven't been able to get it to work yet. 

NSBundle problems:

NSBundle does not necessarily work on all systems.  You cannot link in
bundles on systems that do not support dynamic linking, although you
can use the other facilities of NSBundle, such as locating data files
within a bundle.

If NSBundle does not work on systems that do support dynamic linking,
it is likely that the Makefile package has not been configured to make
bundles on your system and/or that the GNUstep Base Library did not
link in the correct header file to use dynamic linking. Diagnosing and
fixing these problems is not trivial and requires some knowledge of
dynamic linking, object file formats and the Objective-C
runtime. Contact Adam Fedor <fedor@gnu.org> for help.
