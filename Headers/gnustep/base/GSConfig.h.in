
#ifndef	included_GSConfig_h
#define	included_GSConfig_h

/*
 *	Machine/OS specific information required by GNUstep headers.
 */

/*
 * Definition to specify if your processor stores words with the most
 * significant byte first (like Motorola and SPARC, unlike Intel and VAX).
 */
#define GS_WORDS_BIGENDIAN      @GS_WORDS_BIGENDIAN@

/*
 *	Size definitions for standard types
 */
#define	GS_SIZEOF_SHORT		@ac_cv_sizeof_short@
#define	GS_SIZEOF_INT		@ac_cv_sizeof_int@
#define	GS_SIZEOF_LONG		@ac_cv_sizeof_long@
#define	GS_SIZEOF_LONG_LONG	@ac_cv_sizeof_long_long@
#define	GS_SIZEOF_FLOAT		@ac_cv_sizeof_float@
#define	GS_SIZEOF_DOUBLE	@ac_cv_sizeof_double@

/*
 *	Size information to be places in bits 5 and 6 of type encoding bytes
 *	in archives (bits 0 to 4 are used for basic type info and bit 7 is
 *	used to mark cross-references to previously encoded objects).
 */
#define	_GSC_S_SHT	@_GSC_S_SHT@
#define	_GSC_S_INT	@_GSC_S_INT@
#define	_GSC_S_LNG	@_GSC_S_LNG@
#define	_GSC_S_LNG_LNG	@_GSC_S_LNG_LNG@

/*
 * Type definitions for types with known sizes.
 */
typedef @GS_SINT8@ gss8;
typedef @GS_UINT8@ gsu8;
typedef @GS_SINT16@ gss16;
typedef @GS_UINT16@ gsu16;
typedef @GS_SINT32@ gss32;
typedef @GS_UINT32@ gsu32;
typedef @GS_SINT64@ gss64;
typedef @GS_UINT64@ gsu64;
typedef @GS_FLT32@ gsf32;
typedef @GS_FLT64@ gsf64;

#endif	/* included_GSConfig_h */

